package pass_Validator;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Password {

    private String password;


    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    String verifyPassword() {

        System.out.println("");
        System.out.println("Your password:");
        System.out.println("");

        int complexity = 0;

        if (password.length() < 8) {
            System.out.println("Does not contain the minimum characters.");
        } else {
            System.out.println("Contain the minimum characters.");
            complexity += 1;
        }
        int count = 0;

        //-------------------------------------------------------------------------------------

        for (int i = 0; i < password.length(); i++) {
            if (Character.isUpperCase(password.charAt(i))) {
                count = count + 1;
            }
        }
        if (count == 0) {
            System.out.println("Does not have an uppercase letter.");
        } else {
            System.out.println("Have " + count + " uppercase letter(s).");
            complexity += 1;
        }

        //-------------------------------------------------------------------------------------

        if (password.contains("johndoe")) {
            System.out.println("Contains your username.");
        } else {
            System.out.println("Does not contain your username.");
            complexity += 1;
        }

        //-------------------------------------------------------------------------------------

        Pattern special = Pattern.compile ("[!@#$%&*()_+=|<>?{}\\[\\]~0-9]");
        Matcher matcher = special.matcher(password);
        boolean lookFor = matcher.find();
        if(lookFor){
            System.out.println("Contains one or more special character(s) or numbers");
            complexity += 1;
        }else{
            System.out.println("Does not contain a special character or number");
        }

        //-------------------------------------------------------------------------------------

        if(password.equals("ABC_1234")){
            System.out.println("It is the same old password");
            complexity = 0;
        }else{
            System.out.println("It is not the same password");
            complexity += 1;
        }

        //-------------------------------------------------------------------------------------

        System.out.println("");
        System.out.println("========================RESULT========================");

        if(complexity == 0) System.out.println("Your new password is very bad. 0/5");
        if(complexity == 1) System.out.println("Your new password is bad. 1/5");
        if(complexity == 2) System.out.println("Your new password is regular. 2/5");
        if(complexity == 3) System.out.println("Your new password is not bad. 3/5");
        if(complexity == 4) System.out.println("Your new password is good. 4/5");
        if(complexity == 5) System.out.println("Your new password is very good. 5/5");

        System.out.println("========================RESULT========================");

        return null;
    }
}
